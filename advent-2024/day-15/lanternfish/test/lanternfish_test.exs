defmodule LanternfishTest do
  use ExUnit.Case
  doctest Lanternfish

  alias History.Grid

  describe "puzzle example" do
    setup do
      [
        grid: %Grid{
          size: %{y: 8, x: 8},
          squares: %{
            {0, 0} => ?#, {0, 1} => ?#, {0, 2} => ?#, {0, 3} => ?#,
            {0, 4} => ?#, {0, 5} => ?#, {0, 6} => ?#, {0, 7} => ?#,
            {1, 0} => ?#, {1, 3} => ?O, {1, 5} => ?O, {1, 7} => ?#,
            {2, 0} => ?#, {2, 1} => ?#, {2, 4} => ?O, {2, 7} => ?#,
            {3, 0} => ?#, {3, 4} => ?O, {3, 7} => ?#,
            {4, 0} => ?#, {4, 2} => ?#, {4, 4} => ?O, {4, 7} => ?#,
            {5, 0} => ?#, {5, 4} => ?O, {5, 7} => ?#,
            {6, 0} => ?#, {6, 7} => ?#,
            {7, 0} => ?#, {7, 1} => ?#, {7, 2} => ?#, {7, 3} => ?#,
            {7, 4} => ?#, {7, 5} => ?#, {7, 6} => ?#, {7, 7} => ?#,
          },
          meta: %{start: {2, 2}},
        },
        directions: [
          :west, :north, :north, :east, :east, :east, :south, :south,
          :west, :south, :east, :east, :south, :west, :west,
        ],
        exp_move_dumps: [
          """
          ########
          #..O.O.#
          ##@.O..#
          #...O..#
          #.#.O..#
          #...O..#
          #......#
          ########
          """,
          """
          ########
          #..O.O.#
          ##@.O..#
          #...O..#
          #.#.O..#
          #...O..#
          #......#
          ########
          """,
          """
          ########
          #.@O.O.#
          ##..O..#
          #...O..#
          #.#.O..#
          #...O..#
          #......#
          ########
          """,
          """
          ########
          #.@O.O.#
          ##..O..#
          #...O..#
          #.#.O..#
          #...O..#
          #......#
          ########
          """,
          """
          ########
          #..@OO.#
          ##..O..#
          #...O..#
          #.#.O..#
          #...O..#
          #......#
          ########
          """,
          """
          ########
          #...@OO#
          ##..O..#
          #...O..#
          #.#.O..#
          #...O..#
          #......#
          ########
          """,
          """
          ########
          #...@OO#
          ##..O..#
          #...O..#
          #.#.O..#
          #...O..#
          #......#
          ########
          """,
          """
          ########
          #....OO#
          ##..@..#
          #...O..#
          #.#.O..#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##..@..#
          #...O..#
          #.#.O..#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##.@...#
          #...O..#
          #.#.O..#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##.....#
          #..@O..#
          #.#.O..#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##.....#
          #...@O.#
          #.#.O..#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##.....#
          #....@O#
          #.#.O..#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##.....#
          #.....O#
          #.#.O@.#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##.....#
          #.....O#
          #.#O@..#
          #...O..#
          #...O..#
          ########
          """,
          """
          ########
          #....OO#
          ##.....#
          #.....O#
          #.#O@..#
          #...O..#
          #...O..#
          ########
          """,
        ],
      ]
    end

    test "produces correct box movements", fixture do
      act_move_dumps =
        Lanternfish.movements(fixture.grid, fixture.directions)
        |> Enum.map(&Lanternfish.dump_string/1)
      assert act_move_dumps == fixture.exp_move_dumps
    end
  end
end
