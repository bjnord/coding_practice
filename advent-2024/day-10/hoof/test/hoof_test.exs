defmodule HoofTest do
  use ExUnit.Case
  doctest Hoof

  alias History.Grid

  describe "puzzle examples" do
    setup do
      [
        grids: [
          %Grid{
            size: %{y: 4, x: 4},
            squares: %{
              {0, 0} => 0, {0, 1} => 1, {0, 2} => 2, {0, 3} => 3,
              {1, 0} => 1, {1, 1} => 2, {1, 2} => 3, {1, 3} => 4,
              {2, 0} => 8, {2, 1} => 7, {2, 2} => 6, {2, 3} => 5,
              {3, 0} => 9, {3, 1} => 8, {3, 2} => 7, {3, 3} => 6,
            },
          },
          %Grid{
            size: %{x: 7, y: 7},
            squares: %{
              {0, 3} => 0,
              {1, 3} => 1,
              {2, 3} => 2,
              {3, 0} => 6, {3, 1} => 5, {3, 2} => 4, {3, 3} => 3,
              {3, 4} => 4, {3, 5} => 5, {3, 6} => 6,
              {4, 0} => 7, {4, 6} => 7,
              {5, 0} => 8, {5, 6} => 8,
              {6, 0} => 9, {6, 6} => 9,
            },
          },
          %Grid{
            size: %{x: 7, y: 7},
            squares: %{
              {0, 2} => 9, {0, 3} => 0, {0, 6} => 9,
              {1, 3} => 1, {1, 5} => 9, {1, 6} => 8,
              {2, 3} => 2, {2, 6} => 7,
              {3, 0} => 6, {3, 1} => 5, {3, 2} => 4, {3, 3} => 3,
              {3, 4} => 4, {3, 5} => 5, {3, 6} => 6,
              {4, 0} => 7, {4, 1} => 6, {4, 2} => 5,
              {4, 4} => 9, {4, 5} => 8, {4, 6} => 7,
              {5, 0} => 8, {5, 1} => 7, {5, 2} => 6,
              {6, 0} => 9, {6, 1} => 8, {6, 2} => 7,
            },
          },
          %Grid{
            size: %{x: 7, y: 7},
            squares: %{
              {0, 0} => 1, {0, 1} => 0, {0, 4} => 9,
              {1, 0} => 2, {1, 4} => 8,
              {2, 0} => 3, {2, 4} => 7,
              {3, 0} => 4, {3, 1} => 5, {3, 2} => 6, {3, 3} => 7,
              {3, 4} => 6, {3, 5} => 5, {3, 6} => 4,
              {4, 3} => 8, {4, 6} => 3,
              {5, 3} => 9, {5, 6} => 2,
              {6, 5} => 0, {6, 6} => 1,
            },
          },
          %Grid{
            size: %{x: 8, y: 8},
            squares: %{
              {0, 0} => 8, {0, 1} => 9, {0, 2} => 0, {0, 3} => 1,
              {0, 4} => 0, {0, 5} => 1, {0, 6} => 2, {0, 7} => 3,
              {1, 0} => 7, {1, 1} => 8, {1, 2} => 1, {1, 3} => 2,
              {1, 4} => 1, {1, 5} => 8, {1, 6} => 7, {1, 7} => 4,
              {2, 0} => 8, {2, 1} => 7, {2, 2} => 4, {2, 3} => 3,
              {2, 4} => 0, {2, 5} => 9, {2, 6} => 6, {2, 7} => 5,
              {3, 0} => 9, {3, 1} => 6, {3, 2} => 5, {3, 3} => 4,
              {3, 4} => 9, {3, 5} => 8, {3, 6} => 7, {3, 7} => 4,
              {4, 0} => 4, {4, 1} => 5, {4, 2} => 6, {4, 3} => 7,
              {4, 4} => 8, {4, 5} => 9, {4, 6} => 0, {4, 7} => 3,
              {5, 0} => 3, {5, 1} => 2, {5, 2} => 0, {5, 3} => 1,
              {5, 4} => 9, {5, 5} => 0, {5, 6} => 1, {5, 7} => 2,
              {6, 0} => 0, {6, 1} => 1, {6, 2} => 3, {6, 3} => 2,
              {6, 4} => 9, {6, 5} => 8, {6, 6} => 0, {6, 7} => 1,
              {7, 0} => 1, {7, 1} => 0, {7, 2} => 4, {7, 3} => 5,
              {7, 4} => 6, {7, 5} => 7, {7, 6} => 3, {7, 7} => 2,
            },
          },
        ],
        exp_trailhead_scores: [
          [{{0, 0}, 1}],
          [{{0, 3}, 2}],
          [{{0, 3}, 4}],
          [
            {{0, 1}, 1}, {{6, 5}, 2},
          ],
          [
            {{0, 2}, 5}, {{0, 4}, 6}, {{2, 4}, 5},
            {{4, 6}, 3}, {{5, 2}, 1}, {{5, 5}, 3},
            {{6, 0}, 5}, {{6, 6}, 3}, {{7, 1}, 5},
          ],
        ],
        exp_scores: [1, 2, 4, 3, 36],
      ]
    end

    test "produces expected trailhead scores", fixture do
      act_trailhead_scores = fixture.grids
                             |> Enum.map(&Hoof.trailhead_scores/1)
      assert act_trailhead_scores == fixture.exp_trailhead_scores
    end

    test "produces expected score", fixture do
      act_scores = fixture.grids
                   |> Enum.map(&Hoof.score/1)
      assert act_scores == fixture.exp_scores
    end
  end
end
